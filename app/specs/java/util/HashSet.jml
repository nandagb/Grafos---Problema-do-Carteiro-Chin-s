package java.util;

public class HashSet<E> extends AbstractSet<E> implements Set<E>, Cloneable, java.io.Serializable {

    //@ public normal_behavior 
    //@   ensures isEmpty();
    //@ pure
    public HashSet();
    
    //@ public normal_behavior ensures true;
    //@   ensures size() == c.size();
    //@   ensures (\forall E e; containsObject(e) ==> c.containsObject(e));
    //@   ensures c instanceof Set ==> (\forall E e; c.containsObject(e) ==> containsObject(e));
    //@ pure
    public HashSet(Collection<? extends E> c);
    
    //@ public normal_behavior 
    //@   ensures isEmpty();
    //@ pure
    public HashSet(int initialCapacity);
    
    //@ public normal_behavior 
    //@   ensures isEmpty();
    //@ pure
    public HashSet(int initialCapacity, float loadFactor);
    
    public boolean add(E e);
    
    public void clear();
    
    public Object clone();
    
    public boolean contains(Object o);
    
    // specification inherited
    public boolean isEmpty();
    
    public Iterator<E> iterator();
    
    public boolean remove(Object o);
    
    //@ also public normal_behavior 
    //@   ensures true;
    //@ pure
    public int size();
    
}
