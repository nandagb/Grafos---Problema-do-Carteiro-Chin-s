package java.util.function;

//@ non_null_by_default
@FunctionalInterface
public interface Function<T,R> {

      //@ model public instance JMLDataGroup applyFrame;
      
      //@ public normal_behavior
      //@   assignable applyFrame;
      public abstract R apply(T t);
      
      default public <V> Function<V, R> compose(Function<? super V, ? extends T> before);

      default public <V> Function<T, V> andThen(Function<? super R, ? extends V> after);


      /*@  @FunctionalInterface model public static interface Pure<T,R> extends Function<T,R> {
      @   also public normal_behavior
      @     assignable \nothing;
      @   pure
      @   public R apply(T t);
      @ }
      @*/
      

    
      /*@ public static model interface Identity<XXX> extends Function<XXX,XXX> {
      @   also public model_program {
      @      return t;
      @   }
      @   pure
      @   public XXX apply(XXX t);
      @ }
      @*/
    
      //@ public normal_behavior
      //@  requires true;
      //@   ensures \result instanceof Identity;
      //@ pure
      public static <T> Function<T, T> identity();
      
      /*@
      model public static interface NoNulls<T,R> extends Function<T,R> {  // FIXME - should be public by default???
        
        also public normal_behavior
          ensures \result != null;
        R apply(T p);
      }
      @*/
      

}
