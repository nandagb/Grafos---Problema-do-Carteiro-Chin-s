package java.util.function;

public interface Predicate<T> {

    //@ public normal_behavior
    //@    ensures true;
    //@ pure
    public abstract boolean test(T t);
    
//    public Predicate<T> and(Predicate<? super T>);
//    public Predicate<T> negate();
//    public Predicate<T> or(Predicate<? super T>);
//    public static <T> Predicate<T> isEqual(java.lang.Object);

    /*@
    model public static interface Pure<T> extends Predicate<T> {

        //@ also public normal_behavior
        //@    ensures true;
        //@ pure
        public abstract boolean test(T t);
    }
    */
  }
