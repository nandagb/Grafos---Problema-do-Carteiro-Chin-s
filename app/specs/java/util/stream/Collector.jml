package java.util.stream;
import java.util.function.*;

public interface Collector<T, A, R> {
    
  //@ model public instance JMLDataGroup content;
    
  public abstract Supplier<A> supplier();
  public abstract BiConsumer<A, T> accumulator();
  public abstract BinaryOperator<A> combiner();
  public abstract Function<A, R> finisher();
  public abstract java.util.Set<Collector.Characteristics> characteristics();
  public static <T, R> Collector<T, R, R> of(Supplier<R> supplier, BiConsumer<R, T> consumer, BinaryOperator<R> op, Collector.Characteristics... args);
  public static <T, A, R> Collector<T, A, R> of(Supplier<A> supplier, BiConsumer<A, T> consumer, BinaryOperator<A> op, Function<A, R> fcn, Collector.Characteristics... args);

// FIXME - including this declaration causes a crash (compiler.testDuplicateParse)
//  public enum Characteristics { // implicitly static and final
//	  CONCURRENT, UNORDERED, IDENTITY_FINISH
//  }
}
