package javax.crypto.spec;

public class SecretKeySpec implements java.security.spec.KeySpec,javax.crypto.SecretKey {
//      private static final long serialVersionUID;
    //@ spec_public
    private byte[] key;
    
    //@ spec_public
    private java.lang.String algorithm;
    
    //@ public normal_behavior
    //@   ensures this.algorithm == algorithm;
    //@   ensures \fresh(this.key);
    //@   ensures this.key != buf;
    //@   ensures this.key.length == buf.length;
    //@   ensures java.util.Arrays.equalArrays(this.key,0,buf,0,buf.length);
    //@ pure
    public SecretKeySpec(byte[] buf, java.lang.String algorithm);
    
    //@ public normal_behavior
    //@   requires length >= 0 && offset >= 0 && length <= buf.length - offset;
    //@      ensures this.algorithm == algorithm;
    //@   ensures this.key != buf;
    //@   ensures this.key.length == length;
    //@   ensures (\forall int j; 0<=j && j<length; key[j] == buf[j+offset]);
    //@ pure
    public SecretKeySpec(byte[] buf, int offset, int length, java.lang.String algorithm);
//      public java.lang.String getAlgorithm();
//      public java.lang.String getFormat();

    
    public byte[] getEncoded();
//      public int hashCode();
//      public boolean equals(java.lang.Object);
    }
