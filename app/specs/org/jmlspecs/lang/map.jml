package org.jmlspecs.lang;

//@ immutable pure non_null_by_default
public class map<K,V> implements IJmlPrimitiveType, IJmlArrayLike {
/*@    

    public normal_behavior
      ensures (\forall K k; ; \result[k] == null);
    model heap_free public static <K,V> map<K,V> empty();
    
    public normal_behavior
      ensures \result == this[k];
    model heap_free public V get(K k);

    public normal_behavior
      ensures \result == (\forall K k;; s[k] == ss[k]);
    model heap_free public static <K,V> boolean equals(map<K,V> s, map<K,V> ss);
    
    public normal_behavior
      ensures \result == (this == s || equals(this,s));
    model heap_free public boolean equals(map<K,V> s);
    
    public normal_behavior
      ensures \result[k] == v;
      ensures (\forall K kk;; k != kk ==> (\result[kk] == this[kk]));
      ensures this[k] == v ==> \result == this;
    model heap_free public map<K,V> put(K k, V v);
@*/
}

